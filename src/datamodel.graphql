type User {
    _id : ID!
    creationDate : DateTime!
    lastUpdate : DateTime!
    firstname : String!
    lastname : String!
    email : String!
    devices : [Device!]!
    contexts : [Context!]!
}

type Survey {
    _id : ID!
    creationDate : DateTime!
    lastUpdate : DateTime!
    creator : User!
    title : String!
    description : String!
    active : Boolean!
    public : Boolean!
    types : [QuestionType!]!
    questions : [Question!]!
    votes : [Vote!]!
    contexts : [Context!]!
    images : [ImageData!]!
}

type Context {
    _id : ID!
    creationDate : DateTime!
    lastUpdate : DateTime!
    public : Boolean!
    activeQuestion : Question
    activeSurvey : Survey
    owners : [User!]
    devices : [Device!]!
    name : String!
    states : [State!]!
}

type State {
    key : String!
    value : String!
}

type Device {
    _id : ID!
    creationDate : DateTime!
    lastUpdate : DateTime!
    name : String!
    context : Context
    owners : [User!]
    answers : [Answer!]!
}

interface Question {
    _id : ID!
    creationDate : DateTime!
    lastUpdate : DateTime!
    survey : Survey!
    type : QuestionType!
    items : [Item!]!
    value : String!
    description : String
}

type LikeQuestion implements Question {
    _id : ID!
    creationDate : DateTime!
    lastUpdate : DateTime!
    survey : Survey!
    type : QuestionType!
    items : [Item!]!
    value : String!
    description : String
    likeIcon : ImageData!
}

type LikeDislikeQuestion implements Question {
    _id : ID!
    creationDate : DateTime!
    lastUpdate : DateTime!
    survey : Survey!
    type : QuestionType!
    items : [Item!]!
    value : String!
    description : String
    likeIcon : ImageData!
    dislikeIcon : ImageData!
}

type ChoiceQuestion implements Question {
    _id : ID!
    creationDate : DateTime!
    lastUpdate : DateTime!
    survey : Survey!
    type : QuestionType!
    items : [Item!]!
    value : String!
    description : String
    choices : [ChoiceDescription!]!
    default : String
}

type RegulatorQuestion implements Question {
    _id : ID!
    creationDate : DateTime!
    lastUpdate : DateTime!
    survey : Survey!
    type : QuestionType!
    items : [Item!]!
    value : String!
    description : String
    labels : [Label!]!
    stepSize : Float!
    min : Float!
    max : Float!
    default : Float!
}

type RankingQuestion implements Question {
    _id : ID!
    creationDate : DateTime!
    lastUpdate : DateTime!
    survey : Survey!
    type : QuestionType!
    value : String!
    description : String
    items : [Item!]!
}

type FavoriteQuestion implements Question {
    _id : ID!
    creationDate : DateTime!
    lastUpdate : DateTime!
    survey : Survey!
    type : QuestionType!
    value : String!
    description : String
    items : [Item!]!
}

type Vote {
    _id : ID!
    creationDate : DateTime!
    lastUpdate : DateTime!
    context : Context!
    survey : Survey!
    answers : [Answer!]!
}

interface Answer {
    question : Question!
}

type LikeAnswer implements Answer {
    question : Question!
    liked : Boolean!
}

type LikeDislikeAnswer implements Answer {
    question : Question!
    liked : Boolean!
}

type ChoiceAnswer implements Answer {
    question : Question!
    code : String!
}

type RegulatorAnswer implements Answer {
    question : Question!
    rating : Float!
    normalized : Float!
}

type RankingAnswer implements Answer {
    question : Question!
    codes : [String!]!
}

type FavoriteAnswer implements Answer {
    question : Question!
    code : String!
}

type ImageData{
    _id : ID!
    creationDate : DateTime!
    lastUpdate : DateTime!
    name : String!
    type : String!
    hash : String!
    tags : [String!]!
}

enum QuestionType {
    CHOICE
    FAVORITE
    LIKE
    LIKEDISLIKE
    RANKING
    REGULATOR
}
""" Defines to GraphQL Queries """
type Query {
    """ Returns a list of Surveys (Optional: query surveys for specific QuestionType's)"""
    surveys(pagination: Pagination, sortBy: [SurveySortParameter!], filterBy: SurveyFilter) : [Survey!]


    """ Returns the specified Survey """
    survey(surveyID : HashID!) : Survey!

    """ Returns the amount of available Surveys """
    surveyAmount : Int
}

""" Defines the GraphQL Mutations """
type Mutation {
    """ Creates a Survey and returns the created Survey data """
    createSurvey(data : SurveyCreateInput!) : SurveyCreatePayload!


    """ Updates the specified Survey and returns the updated Survey data """
    updateSurvey(data : SurveyUpdateInput!, surveyID : HashID!) : SurveyUpdatePayload!


    """ Deletes the specified Survey and returns the deleted Survey data """
    deleteSurvey(surveyID : HashID!) : SurveyDeletePayload!
}

enum SortableSurveyField {
    CREATION_DATE
    LAST_UPDATE
    CREATOR
    TITLE
    IS_ACTIVE
}

input SurveySortParameter {
    fieldName : SortableSurveyField!
    sortOption : SortOption!
}

input SurveyFilter {
    connector : ConnectorFilterOption!
    moreFilter : [SurveyFilter!]
    parameters : [SurveyFilterParameter!]
}

input SurveyFilterParameter {
    creationDate : DateFilter
    lastUpdate : DateFilter
    creator : IDFilter
    title : StringFilter
    isActive : BooleanFilter
    types : QuestionTypeFilter
}

""" Defines a survey """
type Survey {
    """ Unique surveyID """
    id : HashID!

    """ Date of creation """
    creationDate : DateTime!

    """ Date of last update """
    lastUpdate : DateTime!

    """ The user that created this survey """
    creator : User

    """ Title of the survey """
    title : String!

    """ Description of the survey """
    description : String

    """ Flag to determine if the Survey is active (can be voted on) """
    isActive : Boolean!

    """ The QuestionType's this survey contains """
    types : [QuestionType!]

    """ All the questions of the survey """
    questions : [Question!]

    """ All the votes of the survey """
    results : Results!

    """ All the controllers of the survey """
    domains : [Domain!]

    """ An Image used for previewing this Survey """
    previewImage : ImageData
}

""" Defines the input to create a survey """
input SurveyCreateInput {
    """ the title """
    title : String!

    """ the description """
    description : String = " "

    """ flag if survey is public """
    isActive : Boolean = false
}

""" Defines the payload to create a survey """
type SurveyCreatePayload {

    """ the survey data """
    survey: Survey!
}

""" Defines the input to update a survey """
input SurveyUpdateInput {

    """ the title """
    title : String

    """ the description """
    description : String

    """ flag if survey is public """
    isActive : Boolean

    """ the prefered sequence of questions (not for adding new questions) """
    questionOrder : [HashID!]
}

""" Defines the payload to update a survey """
type SurveyUpdatePayload {

    """ the survey data """
    survey : Survey!
}

""" Defines the payload to delete a survey """
type SurveyDeletePayload {

    """ the survey data """
    success : Boolean!
}

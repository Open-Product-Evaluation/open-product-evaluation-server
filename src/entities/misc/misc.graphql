""" Defines a scalar to upload images """
scalar Upload

""" Defines a scalar for date and time """
scalar DateTime

""" Defines a scalar for a hashed ID type every entity uses """
scalar HashID

""" Defines different types of questions """
enum QuestionType {
    """ Represents a question where you can choose an option """
    CHOICE
    """ Represents a question where you can favorite an option """
    FAVORITE
    """ Represents a question where you can like an option """
    LIKE
    """ Represents a question where you can like and dislike an option """
    LIKEDISLIKE
    """ Represents a question where you can rank an option """
    RANKING
    """ Represents a question where you can regulate an option """
    REGULATOR
}

""" Provide the maximum amount of Documents you get and at which offset they should start """
input Pagination {
    """ The maximum amount of Documents you get """
    limit : Int = 50

    """ The offset at which the Documents start """
    offset : Int = 0
}

enum SortOption {
    ASCENDING,
    DESCENDING
}

enum ComparisonFilterOption {
    EQUAL
    GREATER
    GREATER_OR_EQUAL
    LOWER
    LOWER_OR_EQUAL
    NOT_EQUAL
    REGEX
}

enum ArrayFilterOption {
    ALL
    ANY
    NOT_IN_ARRAY
}

enum ConnectorFilterOption {
    AND
    NOT_ANY
    NOR
    OR
}

input DateFilter {
    filterMethod : ComparisonFilterOption!
    value : DateTime!
}

input StringFilter {
    filterMethod : ComparisonFilterOption!
    value : String!
}

input IntFilter {
    filterMethod : ComparisonFilterOption!
    value : Int!
}

input FloatFilter {
    filterMethod : ComparisonFilterOption!
    value : Float!
}

input IDFilter {
    filterMethod : ComparisonFilterOption!
    value : HashID!
}

input IDArrayFilter {
    filterMethod : ArrayFilterOption!
    value : [HashID!]!
}

input BooleanFilter {
    filterMethod : ComparisonFilterOption!
    value : Boolean!
}

input QuestionTypeFilter {
    filterMethod : ArrayFilterOption!
    value : [QuestionType!]!
}

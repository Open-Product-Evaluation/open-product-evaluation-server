""" Defines a type for image uploads """
scalar Upload

""" Defines a type for date and time """
scalar DateTime

""" Defines a type for hashed IDs every entity uses """
scalar HashID

""" Defines different types of questions """
enum QuestionType {
    """ Represents a question where the participant can communicate that he / she liked something (or be neutral by answering with 'null' or false). Its mostly needed when there is only this single question and people could simply share a like when walking by (in crowded places). """
    LIKE
    """ Represents a question where the participant can communicate that he / she liked or disliked something (or be neutral by answering with 'null'). """
    LIKEDISLIKE
    """ Represents a question where the participant can choose between different choices / answer options (or be neutral by answering with 'null'). """
    CHOICE
    """ Represents a question where the participant can give a rating thats in between a minimum and maximum value (or be neutral by answering with 'null'). """
    REGULATOR
    """ Represents a question where the participant can favorite one of the provided items (or be neutral by answering with 'null'). """
    FAVORITE
    """ Represents a question where the participant can rank the provided items (or be neutral by answering with 'null'). """
    RANKING
}

""" Provide the maximum amount of documents you get and at which offset they should start """
input Pagination {
    """ The maximum amount of documents you get """
    limit : Int = 50

    """ The offset at which the documents start """
    offset : Int = 0
}

""" Defines the order of objects when sorting them """
enum SortOption {
    """ Start by the lowest value / object """
    ASCENDING,

    """ Start by the highest value / object """
    DESCENDING
}

""" Defines a filter for the query """
input Filter {
    """ The server searches in every rational attribute of the requested entities if it contains or starts with this String """
    search: String!
}
